#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ 'NoneType' object has no attribute 'is_closed'
"""
import asyncio
import logging
from .app.services.browser_manager import browser_manager

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

async def test_browser_fix():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ —Å None."""
    
    try:
        print("üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ 'NoneType' object has no attribute 'is_closed'...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
        print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞...")
        browser = await browser_manager.get_browser(999999999, headless=True, debug_mode=False)
        
        if browser:
            print("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ page
            if browser.page:
                print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—Ä–∞—É–∑–µ—Ä–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º is_closed
                try:
                    is_closed = browser.page.is_closed()
                    print(f"‚úÖ is_closed() —Ä–∞–±–æ—Ç–∞–µ—Ç: {is_closed}")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ is_closed(): {e}")
            else:
                print("‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º is_browser_active
            try:
                is_active = browser_manager.is_browser_active()
                print(f"‚úÖ is_browser_active() —Ä–∞–±–æ—Ç–∞–µ—Ç: {is_active}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ is_browser_active(): {e}")
            
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±—Ä–∞—É–∑–µ—Ä")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        print("\nüîí –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä...")
        closed = await browser_manager.close_browser(999999999)
        print(f"–ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç: {closed}")
        
        print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_browser_fix())


