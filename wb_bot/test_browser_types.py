#!/usr/bin/env python3
"""
–¢–ï–°–¢ –†–ê–ó–ù–´–• –¢–ò–ü–û–í –ë–†–ê–£–ó–ï–†–û–í!
Chromium vs Firefox vs WebKit –¥–ª—è –æ–±—Ö–æ–¥–∞ –¥–µ—Ç–µ–∫—Ü–∏–∏ WB.
"""

import asyncio
from app.services.browser_automation import WBBrowserAutomationPro
from app.utils.logger import get_logger

logger = get_logger(__name__)

async def test_browser_type(browser_type: str, user_id: int):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–∏–ø –±—Ä–∞—É–∑–µ—Ä–∞."""
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫–∞—é {browser_type.upper()} –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    browser = WBBrowserAutomationPro(
        headless=False,  # –í–∏–¥–∏–º—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        debug_mode=True,
        user_id=user_id,
        browser_type=browser_type
    )
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        success = await browser.start_browser(headless=False)
        if not success:
            logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å {browser_type}")
            return False
            
        logger.info(f"‚úÖ {browser_type.upper()} –±—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {browser.debug_port}")
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ WB –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ—Ç–µ–∫—Ü–∏–∏
        await browser.page.goto("https://seller.wildberries.ru/")
        await asyncio.sleep(5)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –ª–∏ WB
        page_title = await browser.page.title()
        logger.info(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {page_title}")
        
        # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
        await browser.take_screenshot(f"test_{browser_type}_wb.png")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ—Ç–µ–∫—Ü–∏—é WebDriver
        webdriver_detected = await browser.page.evaluate("""
            () => {
                return {
                    webdriver: !!window.navigator.webdriver,
                    chrome: !!window.chrome,
                    phantom: !!window.callPhantom || !!window._phantom,
                    selenium: !!window.__selenium_unwrapped || !!window.__webdriver_evaluate,
                    userAgent: window.navigator.userAgent
                }
            }
        """)
        
        logger.info(f"üîç –î–µ—Ç–µ–∫—Ü–∏—è {browser_type}: {webdriver_detected}")
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
        await asyncio.sleep(10)
        
        logger.info(f"‚úÖ {browser_type.upper()} —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ {browser_type}: {e}")
        return False
    finally:
        await browser.close_browser()
        logger.info(f"üî¥ {browser_type.upper()} –±—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç")

async def test_all_browsers():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ —Ç–∏–ø—ã –±—Ä–∞—É–∑–µ—Ä–æ–≤."""
    browsers = [
        ("firefox", 1),
        ("webkit", 2), 
        ("chromium", 3)
    ]
    
    results = {}
    
    for browser_type, user_id in browsers:
        logger.info(f"\n{'='*50}")
        logger.info(f"–¢–ï–°–¢–ò–†–£–Æ {browser_type.upper()}")
        logger.info(f"{'='*50}")
        
        success = await test_browser_type(browser_type, user_id)
        results[browser_type] = success
        
        # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
        await asyncio.sleep(3)
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    logger.info(f"\n{'='*50}")
    logger.info("–†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    logger.info(f"{'='*50}")
    
    for browser_type, success in results.items():
        status = "‚úÖ –£–°–ü–ï–•" if success else "‚ùå –û–®–ò–ë–ö–ê"
        logger.info(f"{browser_type.upper()}: {status}")

if __name__ == "__main__":
    print("üéØ –¢–µ—Å—Ç —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –±—Ä–∞—É–∑–µ—Ä–æ–≤ –¥–ª—è –æ–±—Ö–æ–¥–∞ –¥–µ—Ç–µ–∫—Ü–∏–∏ WB")
    print("\n–ë—É–¥—É—Ç –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã:")
    print("1. Firefox - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –¥–ª—è WB")
    print("2. WebKit - –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Å—Ç–µ–ª—Å") 
    print("3. Chromium - –º–æ–∂–µ—Ç –¥–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è")
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
    
    asyncio.run(test_all_browsers())

