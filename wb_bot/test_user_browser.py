#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""
import asyncio
import sys
from app.services.browser_manager import BrowserManager
from app.services.browser_automation import WBBrowserAutomationPro
from app.utils.logger import get_logger

logger = get_logger(__name__)

async def test_user_browser(user_id: int):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    print(f"üöÄ –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –±—Ä–∞—É–∑–µ—Ä–æ–≤
        browser_manager = BrowserManager()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        browser = await browser_manager.get_browser(
            user_id=user_id,
            headless=False,  # –° –≤–∏–¥–∏–º—ã–º –æ–∫–Ω–æ–º
            debug_mode=True,  # –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
            browser_type="firefox"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º Firefox
        )
        
        if browser and browser.page:
            print(f"‚úÖ –ë—Ä–∞—É–∑–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            print(f"üîó Debug –ø–æ—Ä—Ç: {browser.debug_port}")
            print(f"üìÅ User data: {browser.user_data_dir}")
            print(f"üç™ Cookies —Ñ–∞–π–ª: {browser.cookies_file}")
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É WB
            await browser.page.goto("https://seller.wildberries.ru")
            print(f"üåê –û—Ç–∫—Ä—ã—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ WB")
            
            print(f"üî• –ë—Ä–∞—É–∑–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è...")
            
            # –ñ–¥–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–∫—Ä–æ–µ—Ç
            try:
                while True:
                    await asyncio.sleep(1)
            except KeyboardInterrupt:
                print(f"\nüëã –ó–∞–∫—Ä—ã–≤–∞—é –±—Ä–∞—É–∑–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}...")
                await browser.close_browser()
                print(f"‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç!")
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    if len(sys.argv) < 2:
        print("‚ùå –£–∫–∞–∂–∏—Ç–µ USER_ID!")
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python test_user_browser.py <USER_ID>")
        print("–ü—Ä–∏–º–µ—Ä: python test_user_browser.py 5123262366")
        return
    
    try:
        user_id = int(sys.argv[1])
        print(f"üéØ –¶–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ ID –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ 5
        if not str(user_id).startswith('5'):
            print(f"‚ö†Ô∏è USER_ID {user_id} –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ 5, –Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º...")
        
        await test_user_browser(user_id)
        
    except ValueError:
        print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç USER_ID: {sys.argv[1]}")
        print("USER_ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(main())


