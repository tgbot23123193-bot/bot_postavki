"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±—Ä–∞—É–∑–µ—Ä–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏.
"""

import asyncio
import sys
from .app.services.browser_automation import WBBrowserAutomation


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    
    print("=" * 50)
    print("üåê –¢–ï–°–¢ –ë–†–ê–£–ó–ï–†–ù–û–ô –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–ò WB")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    print("\n1. –ó–∞–ø—É—Å–∫–∞—é –±—Ä–∞—É–∑–µ—Ä...")
    browser = WBBrowserAutomation(headless=False)
    
    try:
        browser.start_browser()
        print("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫—É–∫–∏
        print("\n2. –ü—Ä–æ–≤–µ—Ä—è—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∫—É–∫–∏...")
        has_cookies = browser.load_cookies()
        
        if has_cookies:
            print("üç™ –ö—É–∫–∏ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–±—É—é –≤–æ–π—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏...")
        else:
            print("‚ùå –ö—É–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–π –≤—Ö–æ–¥")
            
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω
            phone = input("\nüì± –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (+79991234567): ")
            
            print(f"\n3. –ù–∞—á–∏–Ω–∞—é –≤—Ö–æ–¥ —Å –Ω–æ–º–µ—Ä–æ–º {phone[:4]}****...")
            success = await browser.login(phone)
            
            if success:
                print("‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏")
                return
        
        # –ú–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π
        while True:
            print("\n" + "=" * 50)
            print("–í–´–ë–ï–†–ò–¢–ï –î–ï–ô–°–¢–í–ò–ï:")
            print("1. –ù–∞–π—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã")
            print("2. –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç–∞–≤–∫—É")
            print("3. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
            print("4. –í—ã—Ö–æ–¥")
            print("=" * 50)
            
            choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-4): ")
            
            if choice == "1":
                print("\nüîç –ò—â—É –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã...")
                slots = await browser.find_available_slots()
                
                if slots:
                    print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(slots)} —Å–ª–æ—Ç–æ–≤:")
                    for i, slot in enumerate(slots[:10], 1):
                        print(f"  {i}. üìÖ {slot['date']} - –ö–æ—ç—Ñ: x{slot['coefficient']}")
                else:
                    print("üòî –°–ª–æ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                    
            elif choice == "2":
                supply_id = input("\n–í–≤–µ–¥–∏—Ç–µ ID –ø–æ—Å—Ç–∞–≤–∫–∏: ")
                date = input("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É (YYYY-MM-DD): ")
                
                print(f"\nüìÖ –ë—Ä–æ–Ω–∏—Ä—É—é –ø–æ—Å—Ç–∞–≤–∫—É {supply_id} –Ω–∞ {date}...")
                success = await browser.book_supply_slot(supply_id, date)
                
                if success:
                    print("‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ!")
                else:
                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å")
                    
            elif choice == "3":
                supply_id = input("\n–í–≤–µ–¥–∏—Ç–µ ID –ø–æ—Å—Ç–∞–≤–∫–∏: ")
                start_date = input("–ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ (YYYY-MM-DD): ")
                end_date = input("–ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞ (YYYY-MM-DD): ")
                max_coef = float(input("–ú–∞–∫—Å. –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç (1-5): "))
                
                print(f"\nü§ñ –ó–∞–ø—É—Å–∫–∞—é –∞–≤—Ç–æ–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥...")
                success = await browser.monitor_and_book(
                    supply_id=supply_id,
                    start_date=start_date,
                    end_date=end_date,
                    max_coefficient=max_coef,
                    check_interval=5
                )
                
                if success:
                    print("‚úÖ –ü–æ—Å—Ç–∞–≤–∫–∞ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!")
                else:
                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
                    
            elif choice == "4":
                print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
                
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
        
    finally:
        print("\nüîö –ó–∞–∫—Ä—ã–≤–∞—é –±—Ä–∞—É–∑–µ—Ä...")
        browser.close_browser()
        print("‚úÖ –ì–æ—Ç–æ–≤–æ!")


if __name__ == "__main__":
    print("\nüöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –±—Ä–∞—É–∑–µ—Ä–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏\n")
    
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)


