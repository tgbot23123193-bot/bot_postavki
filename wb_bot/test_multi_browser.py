#!/usr/bin/env python3
"""
–Å–ë–ê–ù–´–ô –¢–ï–°–¢ –ú–£–õ–¨–¢–ò–ë–†–ê–£–ó–ï–†–ê!
–ó–∞–ø—É—Å–∫–∞–µ—Ç 2-5 –±—Ä–∞—É–∑–µ—Ä–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –±–µ–∑ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤.
"""

import asyncio
import time
from .app.services.browser_automation import WBBrowserAutomationPro
from .app.utils.logger import get_logger

logger = get_logger(__name__)

async def test_browser(user_id: int, url: str = "https://www.google.com"):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–¥–∏–Ω –±—Ä–∞—É–∑–µ—Ä —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º user_id."""
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫–∞—é –±—Ä–∞—É–∑–µ—Ä {user_id}...")
    
    browser = WBBrowserAutomationPro(
        headless=False,  # –í–∏–¥–∏–º—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        debug_mode=True,
        user_id=user_id
    )
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–∞
        await browser.start_browser(headless=False)
        logger.info(f"‚úÖ –ë—Ä–∞—É–∑–µ—Ä {user_id} –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {browser.debug_port}")
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        await browser.page.goto(url)
        await asyncio.sleep(3)
        
        # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
        await browser.take_screenshot(f"test_browser_{user_id}.png")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await browser.page.fill('input[name="q"]', f"–¢–µ—Å—Ç –±—Ä–∞—É–∑–µ—Ä–∞ {user_id}")
        await asyncio.sleep(2)
        
        # –ï—â–µ –æ–¥–∏–Ω —Å–∫—Ä–∏–Ω—à–æ—Ç
        await browser.take_screenshot(f"test_browser_{user_id}_search.png")
        
        logger.info(f"‚úÖ –ë—Ä–∞—É–∑–µ—Ä {user_id} —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª!")
        
        # –î–µ—Ä–∂–∏–º –±—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
        await asyncio.sleep(10)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ {user_id}: {e}")
    finally:
        await browser.close_browser()
        logger.info(f"üî¥ –ë—Ä–∞—É–∑–µ—Ä {user_id} –∑–∞–∫—Ä—ã—Ç")

async def test_multiple_browsers():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –±—Ä–∞—É–∑–µ—Ä–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ."""
    logger.info("üéØ –ù–ê–ß–ò–ù–ê–Æ –¢–ï–°–¢ –ú–£–õ–¨–¢–ò–ë–†–ê–£–ó–ï–†–ê!")
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è 3 –±—Ä–∞—É–∑–µ—Ä–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
    tasks = []
    for i in range(1, 4):  # –ë—Ä–∞—É–∑–µ—Ä—ã —Å user_id 1, 2, 3
        task = asyncio.create_task(test_browser(i))
        tasks.append(task)
        
        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—É—Å–∫–∞–º–∏
        await asyncio.sleep(2)
    
    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
    logger.info("‚è≥ –ñ–¥—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤...")
    await asyncio.gather(*tasks)
    
    logger.info("üéâ –¢–ï–°–¢ –ú–£–õ–¨–¢–ò–ë–†–ê–£–ó–ï–†–ê –ó–ê–í–ï–†–®–ï–ù!")

async def test_single_browser():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–¥–∏–Ω –±—Ä–∞—É–∑–µ—Ä –±–µ–∑ user_id (–∫–∞–∫ —Ä–∞–Ω—å—à–µ)."""
    logger.info("üîç –¢–µ—Å—Ç–∏—Ä—É—é –æ–±—ã—á–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä –±–µ–∑ user_id...")
    
    browser = WBBrowserAutomationPro(headless=False, debug_mode=True)
    
    try:
        await browser.start_browser(headless=False)
        logger.info(f"‚úÖ –û–±—ã—á–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {browser.debug_port}")
        
        await browser.page.goto("https://www.google.com")
        await asyncio.sleep(3)
        
        await browser.take_screenshot("test_single_browser.png")
        
        await asyncio.sleep(5)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ–±—ã—á–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ: {e}")
    finally:
        await browser.close_browser()

if __name__ == "__main__":
    print("üéØ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç:")
    print("1. –û–¥–∏–Ω–æ—á–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä (–∫–∞–∫ —Ä–∞–Ω—å—à–µ)")
    print("2. –ú—É–ª—å—Ç–∏–±—Ä–∞—É–∑–µ—Ä (3 –±—Ä–∞—É–∑–µ—Ä–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ)")
    
    choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1 –∏–ª–∏ 2): ").strip()
    
    if choice == "1":
        asyncio.run(test_single_browser())
    elif choice == "2":
        asyncio.run(test_multiple_browsers())
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
